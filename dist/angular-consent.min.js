!function(e){e.module("angularConsent.config",[]).value("angularConsent.config",{debug:!0}),e.module("angularConsent.directives",[]),e.module("angularConsent.controllers",[]),e.module("angularConsent",["angularConsent.config","angularConsent.directives","angularConsent.controllers","ngCookies"])}(angular),function(e){function n(e,n,t){this.getCookieKey=function(){return"angular-consent."+(n.consent||"global")},this.getCookieOptions=function(){if(!n.consentCookieOptions){var e=new Date,o=new Date;return o.setTime(+e+31104e6),{expires:o.toGMTString()}}return t.$eval(n.consentCookieOptions)},this.getCookieValue=function(){try{return e.get(this.getCookieKey())}catch(n){if(n instanceof TypeError)return e[this.getCookieKey()]}},this.setCookieValue=function(n){try{return e.put(this.getCookieKey(),n,this.getCookieOptions())}catch(t){t instanceof TypeError&&(e[this.getCookieKey()]=n)}},this.hasAlreadyAgreed=function(){return this.getCookieValue()?!0:!1},this.hasNotAgreedYet=function(){return!this.hasAlreadyAgreed()},this.reset=function(){try{e.remove(this.getCookieKey())}catch(n){n instanceof TypeError&&delete e[this.getCookieKey()]}},this.agree=function(){this.setCookieValue(Date.now())}}e.module("angularConsent.controllers").controller("angularConsent.ConsentController",n),n.$inject=["$cookies","$attrs","$scope"]}(angular),function(e){function n(){return{restrict:"A",scope:!0,controller:"angularConsent.ConsentController",controllerAs:"$consent"}}e.module("angularConsent.directives").directive("consent",n)}(angular);